{"version":3,"sources":["../../src/Middlewares/auth.js"],"names":["jwt","require","asyncHandler","ErrorResponse","User","exports","protect","req","res","next","token","headers","authorization","startsWith","split","decoded","verify","process","env","JWT_SECRET","user","findById","id","err","authorize","roles","includes","role"],"mappings":";;;;;;AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,SAAD,CAA5B;;AACA,MAAME,aAAa,GAAGF,OAAO,CAAC,wBAAD,CAA7B;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,gBAAD,CAApB,C,CAEA;;;AACAI,OAAO,CAACC,OAAR,GAAkBJ,YAAY;AAAA,+BAAC,WAAOK,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;AACvD,QAAIC,KAAJ;;AAEA,QACEH,GAAG,CAACI,OAAJ,CAAYC,aAAZ,IACAL,GAAG,CAACI,OAAJ,CAAYC,aAAZ,CAA0BC,UAA1B,CAAqC,QAArC,CAFF,EAGE;AACA;AACAH,MAAAA,KAAK,GAAGH,GAAG,CAACI,OAAJ,CAAYC,aAAZ,CAA0BE,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAR,CAFA,CAGA;AACD,KAVsD,CAWvD;AACA;AACA;AAEA;;;AACA,QAAI,CAACJ,KAAL,EAAY;AACV,aAAOD,IAAI,CAAC,IAAIN,aAAJ,CAAkB,qCAAlB,EAAyD,GAAzD,CAAD,CAAX;AACD;;AAED,QAAI;AACF;AACA,YAAMY,OAAO,GAAGf,GAAG,CAACgB,MAAJ,CAAWN,KAAX,EAAkBO,OAAO,CAACC,GAAR,CAAYC,UAA9B,CAAhB;AAEAZ,MAAAA,GAAG,CAACa,IAAJ,SAAiBhB,IAAI,CAACiB,QAAL,CAAcN,OAAO,CAACO,EAAtB,CAAjB;AAEAb,MAAAA,IAAI;AACL,KAPD,CAOE,OAAOc,GAAP,EAAY;AACZ,aAAOd,IAAI,CAAC,IAAIN,aAAJ,CAAkB,qCAAlB,EAAyD,GAAzD,CAAD,CAAX;AACD;AACF,GA9B6B;;AAAA;AAAA;AAAA;AAAA,IAA9B,C,CAgCA;;AACAE,OAAO,CAACmB,SAAR,GAAoB,CAAC,GAAGC,KAAJ,KAAc;AAChC,SAAO,CAAClB,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACzB,QAAI,CAACgB,KAAK,CAACC,QAAN,CAAenB,GAAG,CAACa,IAAJ,CAASO,IAAxB,CAAL,EAAoC;AAClC,aAAOlB,IAAI,CACT,IAAIN,aAAJ,CACG,aAAYI,GAAG,CAACa,IAAJ,CAASO,IAAK,yCAD7B,EAEE,GAFF,CADS,CAAX;AAMD;;AACDlB,IAAAA,IAAI;AACL,GAVD;AAWD,CAZD","sourcesContent":["const jwt = require(\"jsonwebtoken\");\nconst asyncHandler = require(\"./async\");\nconst ErrorResponse = require(\"../utils/errorResponse\");\nconst User = require(\"../models/User\");\n\n// Protect routes\nexports.protect = asyncHandler(async (req, res, next) => {\n  let token;\n\n  if (\n    req.headers.authorization &&\n    req.headers.authorization.startsWith(\"Bearer\")\n  ) {\n    // Set token from Bearer token in header\n    token = req.headers.authorization.split(\" \")[1];\n    // Set token from cookie\n  }\n  // else if (req.cookies.token) {\n  //   token = req.cookies.token;\n  // }\n\n  // Make sure token exists\n  if (!token) {\n    return next(new ErrorResponse(\"Not authorized to access this route\", 401));\n  }\n\n  try {\n    // Verify token\n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\n\n    req.user = await User.findById(decoded.id);\n\n    next();\n  } catch (err) {\n    return next(new ErrorResponse(\"Not authorized to access this route\", 401));\n  }\n});\n\n// Grant access to specific roles\nexports.authorize = (...roles) => {\n  return (req, res, next) => {\n    if (!roles.includes(req.user.role)) {\n      return next(\n        new ErrorResponse(\n          `User role ${req.user.role} is not authorized to access this route`,\n          403\n        )\n      );\n    }\n    next();\n  };\n};\n"],"file":"auth.js"}