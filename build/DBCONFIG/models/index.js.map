{"version":3,"sources":["../../../src/DBCONFIG/models/index.js"],"names":["fs","require","path","Sequelize","basename","__filename","env","process","NODE_ENV","config","__dirname","db","sequelize","use_env_variable","database","username","password","authenticate","then","console","log","readdirSync","filter","file","indexOf","slice","forEach","model","join","DataTypes","name","Object","keys","modelName","associate","User","Message","Like","hasMany","foreignKey","as","onDelete","hasOne","belongsTo","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst Sequelize = require(\"sequelize\");\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || \"development\";\nconst config = require(__dirname + \"/../config/config.json\")[env];\nconst db = {};\n\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(\n    config.database,\n    config.username,\n    config.password,\n    config\n  );\n}\n\n// const sequelize = new Sequelize(\n//   process.env.DB_NAME_LOCAL,\n//   process.env.DB_USER_LOCAL,\n//   process.env.DB_PSWD_LOCAL,\n//   {\n//     host: process.env.DB_URL_LOCAL,\n//     dialect: process.env.DB_DIALECT_LOCAL,\n//   }\n// );\n\nsequelize.authenticate().then(() => {\n  console.log(\"Database connection OK OOOOO\");\n});\n\nfs.readdirSync(__dirname)\n  .filter((file) => {\n    return (\n      file.indexOf(\".\") !== 0 && file !== basename && file.slice(-3) === \".js\"\n    );\n  })\n  .forEach((file) => {\n    const model = require(path.join(__dirname, file))(\n      sequelize,\n      Sequelize.DataTypes\n    );\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach((modelName) => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\n//Define Model relationships here\ndb.User = require(\"./user\")(sequelize, Sequelize);\ndb.Message = require(\"./message\")(sequelize, Sequelize);\ndb.Like = require(\"./like\")(sequelize, Sequelize);\n\ndb.User.hasMany(db.Message, {\n  foreignKey: \"userId\",\n  as: \"messages\",\n  onDelete: \"CASCADE\",\n});\ndb.User.hasOne(db.Like, {\n  foreignKey: \"userId\",\n  as: \"likes\",\n  onDelete: \"CASCADE\",\n});\ndb.Message.belongsTo(db.User, {\n  foreignKey: \"userId\",\n  as: \"author\",\n  onDelete: \"CASCADE\",\n});\ndb.Like.belongsTo(db.User, {\n  foreignKey: \"userId\",\n  as: \"authorlikes\",\n  onDelete: \"CASCADE\",\n});\nmodule.exports = db;\n"],"file":"index.js"}